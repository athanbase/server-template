// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Env           string                 `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
	Server        *Server                `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Db            *DB                    `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Redis         *Redis                 `protobuf:"bytes,4,opt,name=redis,proto3" json:"redis,omitempty"`
	Log           *Log                   `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Config) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Config) GetDb() *DB {
	if x != nil {
		return x.Db
	}
	return nil
}

func (x *Config) GetRedis() *Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Config) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	UnLoggingOp   []string               `protobuf:"bytes,3,rep,name=un_logging_op,json=unLoggingOp,proto3" json:"un_logging_op,omitempty"` // 不需要记录日志的操作
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *Server) GetUnLoggingOp() []string {
	if x != nil {
		return x.UnLoggingOp
	}
	return nil
}

type Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addrs         []string               `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Passwd        string                 `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	MasterName    string                 `protobuf:"bytes,4,opt,name=master_name,json=masterName,proto3" json:"master_name,omitempty"`
	Db            int32                  `protobuf:"varint,5,opt,name=db,proto3" json:"db,omitempty"`
	IsEnableTls   bool                   `protobuf:"varint,6,opt,name=is_enable_tls,json=isEnableTls,proto3" json:"is_enable_tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Redis) Reset() {
	*x = Redis{}
	mi := &file_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis) ProtoMessage() {}

func (x *Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis.ProtoReflect.Descriptor instead.
func (*Redis) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Redis) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *Redis) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Redis) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *Redis) GetMasterName() string {
	if x != nil {
		return x.MasterName
	}
	return ""
}

func (x *Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Redis) GetIsEnableTls() bool {
	if x != nil {
		return x.IsEnableTls
	}
	return false
}

type DB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Master        *DbConfig              `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	Slave         *DbConfig              `protobuf:"bytes,2,opt,name=slave,proto3" json:"slave,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DB) Reset() {
	*x = DB{}
	mi := &file_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB) ProtoMessage() {}

func (x *DB) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB.ProtoReflect.Descriptor instead.
func (*DB) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{3}
}

func (x *DB) GetMaster() *DbConfig {
	if x != nil {
		return x.Master
	}
	return nil
}

func (x *DB) GetSlave() *DbConfig {
	if x != nil {
		return x.Slave
	}
	return nil
}

type DbConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Dsn             string                 `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	MaxOpenConn     int32                  `protobuf:"varint,2,opt,name=max_open_conn,json=maxOpenConn,proto3" json:"max_open_conn,omitempty"`
	MaxIdleConn     int32                  `protobuf:"varint,3,opt,name=max_idle_conn,json=maxIdleConn,proto3" json:"max_idle_conn,omitempty"`
	MaxLifetimeConn int32                  `protobuf:"varint,4,opt,name=max_lifetime_conn,json=maxLifetimeConn,proto3" json:"max_lifetime_conn,omitempty"`
	Driver          string                 `protobuf:"bytes,5,opt,name=driver,proto3" json:"driver,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DbConfig) Reset() {
	*x = DbConfig{}
	mi := &file_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbConfig) ProtoMessage() {}

func (x *DbConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbConfig.ProtoReflect.Descriptor instead.
func (*DbConfig) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{4}
}

func (x *DbConfig) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *DbConfig) GetMaxOpenConn() int32 {
	if x != nil {
		return x.MaxOpenConn
	}
	return 0
}

func (x *DbConfig) GetMaxIdleConn() int32 {
	if x != nil {
		return x.MaxIdleConn
	}
	return 0
}

func (x *DbConfig) GetMaxLifetimeConn() int32 {
	if x != nil {
		return x.MaxLifetimeConn
	}
	return 0
}

func (x *DbConfig) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppName       string                 `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	IsWriteFile   bool                   `protobuf:"varint,2,opt,name=is_write_file,json=isWriteFile,proto3" json:"is_write_file,omitempty"`
	LogFile       *LogFile               `protobuf:"bytes,3,opt,name=log_file,json=logFile,proto3" json:"log_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Log) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Log) GetIsWriteFile() bool {
	if x != nil {
		return x.IsWriteFile
	}
	return false
}

func (x *Log) GetLogFile() *LogFile {
	if x != nil {
		return x.LogFile
	}
	return nil
}

type LogFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MaxSize       int32                  `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"` // MB
	MaxAge        int32                  `protobuf:"varint,3,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`    // day
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogFile) Reset() {
	*x = LogFile{}
	mi := &file_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFile) ProtoMessage() {}

func (x *LogFile) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFile.ProtoReflect.Descriptor instead.
func (*LogFile) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{6}
}

func (x *LogFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogFile) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *LogFile) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

var File_conf_proto protoreflect.FileDescriptor

const file_conf_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\"\xb2\x01\n" +
	"\x06Config\x12\x10\n" +
	"\x03env\x18\x01 \x01(\tR\x03env\x12*\n" +
	"\x06server\x18\x02 \x01(\v2\x12.kratos.api.ServerR\x06server\x12\x1e\n" +
	"\x02db\x18\x03 \x01(\v2\x0e.kratos.api.DBR\x02db\x12'\n" +
	"\x05redis\x18\x04 \x01(\v2\x11.kratos.api.RedisR\x05redis\x12!\n" +
	"\x03log\x18\x05 \x01(\v2\x0f.kratos.api.LogR\x03log\"\xdc\x02\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x12\"\n" +
	"\run_logging_op\x18\x03 \x03(\tR\vunLoggingOp\x1ai\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1ai\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\xa6\x01\n" +
	"\x05Redis\x12\x14\n" +
	"\x05addrs\x18\x01 \x03(\tR\x05addrs\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x16\n" +
	"\x06passwd\x18\x03 \x01(\tR\x06passwd\x12\x1f\n" +
	"\vmaster_name\x18\x04 \x01(\tR\n" +
	"masterName\x12\x0e\n" +
	"\x02db\x18\x05 \x01(\x05R\x02db\x12\"\n" +
	"\ris_enable_tls\x18\x06 \x01(\bR\visEnableTls\"^\n" +
	"\x02DB\x12,\n" +
	"\x06master\x18\x01 \x01(\v2\x14.kratos.api.DbConfigR\x06master\x12*\n" +
	"\x05slave\x18\x02 \x01(\v2\x14.kratos.api.DbConfigR\x05slave\"\xa8\x01\n" +
	"\bDbConfig\x12\x10\n" +
	"\x03dsn\x18\x01 \x01(\tR\x03dsn\x12\"\n" +
	"\rmax_open_conn\x18\x02 \x01(\x05R\vmaxOpenConn\x12\"\n" +
	"\rmax_idle_conn\x18\x03 \x01(\x05R\vmaxIdleConn\x12*\n" +
	"\x11max_lifetime_conn\x18\x04 \x01(\x05R\x0fmaxLifetimeConn\x12\x16\n" +
	"\x06driver\x18\x05 \x01(\tR\x06driver\"t\n" +
	"\x03Log\x12\x19\n" +
	"\bapp_name\x18\x01 \x01(\tR\aappName\x12\"\n" +
	"\ris_write_file\x18\x02 \x01(\bR\visWriteFile\x12.\n" +
	"\blog_file\x18\x03 \x01(\v2\x13.kratos.api.LogFileR\alogFile\"Q\n" +
	"\aLogFile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bmax_size\x18\x02 \x01(\x05R\amaxSize\x12\x17\n" +
	"\amax_age\x18\x03 \x01(\x05R\x06maxAgeB$Z\"server-template/internal/conf;confb\x06proto3"

var (
	file_conf_proto_rawDescOnce sync.Once
	file_conf_proto_rawDescData []byte
)

func file_conf_proto_rawDescGZIP() []byte {
	file_conf_proto_rawDescOnce.Do(func() {
		file_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_proto_rawDesc), len(file_conf_proto_rawDesc)))
	})
	return file_conf_proto_rawDescData
}

var file_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_conf_proto_goTypes = []any{
	(*Config)(nil),              // 0: kratos.api.Config
	(*Server)(nil),              // 1: kratos.api.Server
	(*Redis)(nil),               // 2: kratos.api.Redis
	(*DB)(nil),                  // 3: kratos.api.DB
	(*DbConfig)(nil),            // 4: kratos.api.DbConfig
	(*Log)(nil),                 // 5: kratos.api.Log
	(*LogFile)(nil),             // 6: kratos.api.LogFile
	(*Server_HTTP)(nil),         // 7: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 8: kratos.api.Server.GRPC
	(*durationpb.Duration)(nil), // 9: google.protobuf.Duration
}
var file_conf_proto_depIdxs = []int32{
	1,  // 0: kratos.api.Config.server:type_name -> kratos.api.Server
	3,  // 1: kratos.api.Config.db:type_name -> kratos.api.DB
	2,  // 2: kratos.api.Config.redis:type_name -> kratos.api.Redis
	5,  // 3: kratos.api.Config.log:type_name -> kratos.api.Log
	7,  // 4: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	8,  // 5: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	4,  // 6: kratos.api.DB.master:type_name -> kratos.api.DbConfig
	4,  // 7: kratos.api.DB.slave:type_name -> kratos.api.DbConfig
	6,  // 8: kratos.api.Log.log_file:type_name -> kratos.api.LogFile
	9,  // 9: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	9,  // 10: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_conf_proto_init() }
func file_conf_proto_init() {
	if File_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_proto_rawDesc), len(file_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_proto_goTypes,
		DependencyIndexes: file_conf_proto_depIdxs,
		MessageInfos:      file_conf_proto_msgTypes,
	}.Build()
	File_conf_proto = out.File
	file_conf_proto_goTypes = nil
	file_conf_proto_depIdxs = nil
}
